{"version":3,"sources":["components/Highlighted.module.scss","components/NavBar.module.scss","App.scss","assets/logo-bookmark.svg","assets/illustration-hero.svg","components/NavBar.js","components/Highlighted.js","components/Features.js","components/Download.js","components/FAQ.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","className","styles","container","href","alt","logo","src","LogoBookmark","link","login","React","Component","Highlighted","title","subtitle","links","button","chrome","firefox","image","IllustrationHero","Features","Download","FAQ","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sIACAA,EAAOC,QAAU,CAAC,SAAW,UAAU,QAAU,UAAU,YAAc,UAAU,aAAe,UAAU,IAAM,yBAAyB,UAAY,+BAA+B,eAAe,kCAAkC,gBAAgB,mCAAmC,MAAQ,2BAA2B,SAAW,8BAA8B,MAAQ,2BAA2B,OAAS,4BAA4B,OAAS,4BAA4B,QAAU,6BAA6B,aAAa,gCAAgC,MAAQ,6B,oBCA/iBD,EAAOC,QAAU,CAAC,SAAW,UAAU,QAAU,UAAU,YAAc,UAAU,aAAe,UAAU,IAAM,oBAAoB,UAAY,0BAA0B,iBAAiB,+BAA+B,KAAO,qBAAqB,KAAO,qBAAqB,MAAQ,wB,gBCA5RD,EAAOC,QAAU,CAAC,SAAW,UAAU,QAAU,UAAU,YAAc,UAAU,aAAe,Y,kBCDlGD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,+C,iRCKtBC,E,uKAEjB,OACE,yBAAKC,UAAWC,IAAOC,WACrB,uBAAGC,KAAK,MACN,yBAAKC,IAAI,OAAOJ,UAAWC,IAAOI,KAAMC,IAAKC,OAE/C,yBAAKP,UAAWC,IAAO,mBACrB,uBAAGD,UAAWC,IAAOO,KAAML,KAAK,MAAhC,YAGA,uBAAGH,UAAWC,IAAOO,KAAML,KAAK,MAAhC,WAGA,uBAAGH,UAAWC,IAAOO,KAAML,KAAK,MAAhC,WAGA,uBAAGH,UAAWC,IAAOQ,MAAON,KAAK,MAAjC,e,GAjB0BO,IAAMC,W,iCCArBC,E,uKAEjB,OACE,yBAAKZ,UAAWC,IAAOC,WACrB,yBAAKF,UAAWC,IAAO,iBACrB,yBAAKD,UAAWC,IAAOY,OAAvB,6BACA,yBAAKb,UAAWC,IAAOa,UAAvB,gJAKA,yBAAKd,UAAWC,IAAOc,OACrB,uBAAGf,UAAS,UAAKC,IAAOe,OAAZ,YAAsBf,IAAOgB,QAAUd,KAAK,MAAxD,oBAGA,uBAAGH,UAAS,UAAKC,IAAOe,OAAZ,YAAsBf,IAAOiB,SAAWf,KAAK,MAAzD,uBAKJ,yBAAKH,UAAWC,IAAO,kBACrB,yBAAKD,UAAWC,IAAO,gBACvB,yBAAKD,UAAWC,IAAOkB,MAAOb,IAAKc,Y,GAtBJV,IAAMC,WCF1BU,G,6KAEjB,OAAO,kC,GAF2BX,IAAMC,YCAvBW,G,6KAEjB,OAAO,kC,GAF2BZ,IAAMC,YCAvBY,G,6KAEjB,OAAO,kC,GAFsBb,IAAMC,YCAlBa,G,6KAEjB,OAAO,kC,GAFyBd,IAAMC,YCmB3Bc,MAbf,WACE,OACE,yBAAKzB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCLc0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ef0ef21d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"softBlue\":\"#5368df\",\"softRed\":\"#fa5757\",\"grayishBlue\":\"#9194a1\",\"veryDarkBlue\":\"#252b46\",\"App\":\"Highlighted_App__102nD\",\"container\":\"Highlighted_container__2LaUC\",\"left-content\":\"Highlighted_left-content__29Qyr\",\"right-content\":\"Highlighted_right-content__1CCP9\",\"title\":\"Highlighted_title__2MhqB\",\"subtitle\":\"Highlighted_subtitle__2xzF7\",\"links\":\"Highlighted_links__2dZn5\",\"button\":\"Highlighted_button__3F-oK\",\"chrome\":\"Highlighted_chrome__1U0ui\",\"firefox\":\"Highlighted_firefox__2LLwg\",\"blue-shape\":\"Highlighted_blue-shape__1lLPn\",\"image\":\"Highlighted_image__1hcme\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"softBlue\":\"#5368df\",\"softRed\":\"#fa5757\",\"grayishBlue\":\"#9194a1\",\"veryDarkBlue\":\"#252b46\",\"App\":\"NavBar_App__12WZU\",\"container\":\"NavBar_container__1tQRS\",\"link-container\":\"NavBar_link-container__3t7_8\",\"link\":\"NavBar_link__1izr4\",\"logo\":\"NavBar_logo__2XWB1\",\"login\":\"NavBar_login__3dH9q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"softBlue\":\"#5368df\",\"softRed\":\"#fa5757\",\"grayishBlue\":\"#9194a1\",\"veryDarkBlue\":\"#252b46\"};","module.exports = __webpack_public_path__ + \"static/media/logo-bookmark.53989d2a.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-hero.dfa0cd82.svg\";","import React from \"react\";\nimport styles from \"./NavBar.module.scss\";\nimport variables from \"../App.scss\";\nimport LogoBookmark from \"../assets/logo-bookmark.svg\";\n\nexport default class NavBar extends React.Component {\n  render() {\n    return (\n      <div className={styles.container}>\n        <a href=\"/#\">\n          <img alt=\"Logo\" className={styles.logo} src={LogoBookmark}></img>\n        </a>\n        <div className={styles[\"link-container\"]}>\n          <a className={styles.link} href=\"/#\">\n            Features\n          </a>\n          <a className={styles.link} href=\"/#\">\n            Pricing\n          </a>\n          <a className={styles.link} href=\"/#\">\n            Contact\n          </a>\n          <a className={styles.login} href=\"/#\">\n            Login\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport styles from \"./Highlighted.module.scss\";\nimport IllustrationHero from \"../assets/illustration-hero.svg\";\nimport variables from \"../App.scss\";\n\nexport default class Highlighted extends React.Component {\n  render() {\n    return (\n      <div className={styles.container}>\n        <div className={styles[\"left-content\"]}>\n          <div className={styles.title}>A Simple Bookmark Manager</div>\n          <div className={styles.subtitle}>\n            A clean and simple interface to organize your favourite websites.\n            Open a new browser tab and see your sites load instantly. Try it for\n            free.\n          </div>\n          <div className={styles.links}>\n            <a className={`${styles.button} ${styles.chrome}`} href=\"/#\">\n              Get it on Chrome\n            </a>\n            <a className={`${styles.button} ${styles.firefox}`} href=\"/#\">\n              Get it on Firefox\n            </a>\n          </div>\n        </div>\n        <div className={styles[\"right-content\"]}>\n          <div className={styles[\"blue-shape\"]}></div>\n          <img className={styles.image} src={IllustrationHero} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./Features.scss\";\n\nexport default class Features extends React.Component {\n  render() {\n    return <div></div>;\n  }\n}\n","import React from \"react\";\nimport \"./Download.scss\";\n\nexport default class Download extends React.Component {\n  render() {\n    return <div></div>;\n  }\n}\n","import React from \"react\";\nimport \"./FAQ.scss\";\n\nexport default class FAQ extends React.Component {\n  render() {\n    return <div></div>;\n  }\n}\n","import React from \"react\";\nimport \"./Footer.scss\";\n\nexport default class Footer extends React.Component {\n  render() {\n    return <div></div>;\n  }\n}\n","import React from \"react\";\nimport \"./App.scss\";\nimport NavBar from \"./components/NavBar\";\nimport Highlighted from \"./components/Highlighted\";\nimport Features from \"./components/Features\";\nimport Download from \"./components/Download\";\nimport FAQ from \"./components/FAQ\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Highlighted />\n      <Features />\n      <Download />\n      <FAQ />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}